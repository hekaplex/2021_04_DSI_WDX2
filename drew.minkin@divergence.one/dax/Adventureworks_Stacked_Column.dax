// DAX Query
DEFINE
  VAR __SQDS0Core = 
    SUMMARIZECOLUMNS(
      'DimProductSubcategory'[EnglishProductSubcategoryName],
      "SumSalesAmount", CALCULATE(SUM('FactInternetSales'[SalesAmount]))
    )

  VAR __SQDS0BodyLimited = 
    TOPN(4, __SQDS0Core, [SumSalesAmount], 0)

  VAR __DS0Core = 
    SUMMARIZECOLUMNS(
      'DimDate'[FiscalYear],
      'DimProductSubcategory'[EnglishProductSubcategoryName],
      __SQDS0BodyLimited,
      "SumSalesAmount", CALCULATE(SUM('FactInternetSales'[SalesAmount]))
    )

  VAR __DS0PrimaryBase = 
    SUMMARIZE(__DS0Core, 'DimDate'[FiscalYear])

  VAR __DS0SecondaryBase = 
    SUMMARIZE(__DS0Core, 'DimProductSubcategory'[EnglishProductSubcategoryName])

  VAR __DS0IntersectionCount = CALCULATE(COUNTROWS(__DS0Core))

  VAR __DS0PrimaryCount = CALCULATE(COUNTROWS(__DS0PrimaryBase))

  VAR __DS0SecondaryCount = CALCULATE(COUNTROWS(__DS0SecondaryBase))

  VAR __DS0SpaceCount = (__DS0PrimaryCount * __DS0SecondaryCount)

  VAR __DS0SparseFactor = MIN(5, DIVIDE(__DS0SpaceCount, __DS0IntersectionCount))

  VAR __DS0TargetIntersectionCount = CEILING(3500 * __DS0SparseFactor, 1)

  VAR __DS0InitTargetPrimaryCount = 
    IF(
      __DS0IntersectionCount <= 3500,
      IF(
        __DS0SpaceCount <= __DS0TargetIntersectionCount,
        3500,
        FLOOR(
          SQRT(__DS0TargetIntersectionCount * DIVIDE(__DS0PrimaryCount, __DS0SecondaryCount)),
          1
        )
      ),
      IF(
        AND(__DS0PrimaryCount > 800, __DS0SecondaryCount > 60),
        CEILING(DIVIDE(__DS0TargetIntersectionCount, 60), 1),
        IF(
          __DS0SecondaryCount > 60,
          __DS0PrimaryCount,
          CEILING(DIVIDE(__DS0TargetIntersectionCount, __DS0SecondaryCount), 1)
        )
      )
    )

  VAR __DS0InitTargetSecondaryCount = 
    IF(
      __DS0IntersectionCount <= 3500,
      IF(
        __DS0SpaceCount <= __DS0TargetIntersectionCount,
        3500,
        FLOOR(
          DIVIDE(__DS0TargetIntersectionCount, FLOOR(
            SQRT(__DS0TargetIntersectionCount * DIVIDE(__DS0PrimaryCount, __DS0SecondaryCount)),
            1
          )),
          1
        )
      ),
      IF(
        AND(__DS0PrimaryCount > 800, __DS0SecondaryCount > 60),
        60,
        IF(
          __DS0SecondaryCount > 60,
          CEILING(DIVIDE(__DS0TargetIntersectionCount, __DS0PrimaryCount), 1),
          __DS0SecondaryCount
        )
      )
    )

  VAR __DS0MinPrimaryCount = MIN(10, __DS0PrimaryCount)

  VAR __DS0MinSecondaryCount = MIN(10, __DS0SecondaryCount)

  VAR __DS0TargetPrimaryCount = 
    IF(
      __DS0InitTargetPrimaryCount < __DS0MinPrimaryCount,
      __DS0MinPrimaryCount,
      IF(
        __DS0InitTargetSecondaryCount < __DS0MinSecondaryCount,
        CEILING(DIVIDE(__DS0TargetIntersectionCount, __DS0MinSecondaryCount), 1),
        __DS0InitTargetPrimaryCount
      )
    )

  VAR __DS0TargetSecondaryCount = 
    IF(
      __DS0InitTargetPrimaryCount < __DS0MinPrimaryCount,
      CEILING(DIVIDE(__DS0TargetIntersectionCount, __DS0MinPrimaryCount), 1),
      IF(
        __DS0InitTargetSecondaryCount < __DS0MinSecondaryCount,
        __DS0MinSecondaryCount,
        __DS0InitTargetSecondaryCount
      )
    )

  VAR __DS0Primary = 
    SAMPLE(__DS0TargetPrimaryCount + 2, __DS0PrimaryBase, 'DimDate'[FiscalYear], 1)

  VAR __DS0Secondary = 
    TOPN(
      __DS0TargetSecondaryCount + 1,
      __DS0SecondaryBase,
      'DimProductSubcategory'[EnglishProductSubcategoryName],
      1
    )

  VAR __DS0BodyWithLimitedSecondary = 
    NATURALINNERJOIN(
      __DS0Core,
      __DS0Secondary
    )

  VAR __DS0KeyValues = 
    GROUPBY(
      __DS0BodyWithLimitedSecondary,
      'DimProductSubcategory'[EnglishProductSubcategoryName],
      "MinSumSalesAmount", MINX(CURRENTGROUP(), [SumSalesAmount]),
      "MaxSumSalesAmount", MAXX(CURRENTGROUP(), [SumSalesAmount])
    )

  VAR __DS0KeyPoints = 
    SELECTCOLUMNS(
      KEEPFILTERS(
        FILTER(
          KEEPFILTERS(NATURALINNERJOIN(
            __DS0BodyWithLimitedSecondary,
            __DS0KeyValues
          )),
          AND(
            AND(
              OR([SumSalesAmount] = [MinSumSalesAmount], [SumSalesAmount] = [MaxSumSalesAmount]),
              NOT([MinSumSalesAmount] = [MaxSumSalesAmount])
            ),
            NOT([SumSalesAmount] = CURRENCY("0"))
          )
        )
      ),
      "'DimDate'[FiscalYear]", 'DimDate'[FiscalYear],
      "'DimProductSubcategory'[EnglishProductSubcategoryName]", 'DimProductSubcategory'[EnglishProductSubcategoryName],
      "SumSalesAmount", [SumSalesAmount]
    )

  VAR __DS0KeyPrimaryLimit = CEILING(DIVIDE(350, __DS0TargetSecondaryCount), 1)

  VAR __DS0KeyPrimaryValuesLimited = 
    TOPN(
      __DS0KeyPrimaryLimit,
      SUMMARIZE(__DS0KeyPoints, 'DimDate'[FiscalYear]),
      'DimDate'[FiscalYear],
      1
    )

  VAR __DS0KeyPrimaryLimitedCount = 
    CALCULATE(COUNTROWS(__DS0KeyPrimaryValuesLimited))

  VAR __DS0PrimaryKeyPoints = 
    DISTINCT(UNION(__DS0Primary, __DS0KeyPrimaryValuesLimited))

  VAR __DS0BodyLimited = 
    NATURALLEFTOUTERJOIN(
      __DS0PrimaryKeyPoints,
      SUBSTITUTEWITHINDEX(
        __DS0BodyWithLimitedSecondary,
        "ColumnIndex",
        __DS0Secondary,
        'DimProductSubcategory'[EnglishProductSubcategoryName],
        ASC
      )
    )

EVALUATE
  ROW(
    "DS0IntersectionCount", __DS0IntersectionCount,
    "DS0PrimaryCount", __DS0PrimaryCount,
    "DS0TargetPrimaryCount", __DS0TargetPrimaryCount,
    "DS0SecondaryCount", __DS0SecondaryCount,
    "DS0TargetSecondaryCount", __DS0TargetSecondaryCount,
    "DS0KeyPrimaryLimitedCount", __DS0KeyPrimaryLimitedCount,
    "DS0KeyPrimaryLimit", __DS0KeyPrimaryLimit
  )

EVALUATE
  __DS0Secondary

ORDER BY
  'DimProductSubcategory'[EnglishProductSubcategoryName]

EVALUATE
  __DS0BodyLimited

ORDER BY
  'DimDate'[FiscalYear], [ColumnIndex]
